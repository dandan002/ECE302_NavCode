ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_ui2d
  20              		.global	__aeabi_dsub
  21              		.global	__aeabi_dadd
  22              		.global	__aeabi_dmul
  23              		.global	__aeabi_d2uiz
  24              		.section	.text.steer_inter,"ax",%progbits
  25              		.align	2
  26              		.global	steer_inter
  27              		.thumb
  28              		.thumb_func
  29              		.type	steer_inter, %function
  30              	steer_inter:
  31              	.LFB64:
  32              		.file 1 "main.c"
   1:main.c        **** // ALL DEBUG OUTPUTS ARE IN P5[1-5]
   2:main.c        **** 
   3:main.c        **** #include "project.h"
   4:main.c        **** #include <stdio.h>
   5:main.c        **** 
   6:main.c        **** // Speed control constants and variables
   7:main.c        **** #define TARGET_SPEED 4.0          
   8:main.c        **** #define WHEEL_CIRCUMFERENCE 0.5   
   9:main.c        **** #define PULSES_PER_TURN 5         
  10:main.c        **** #define Kp_speed 500               
  11:main.c        **** #define Ki_speed 150
  12:main.c        **** 
  13:main.c        **** #define MAX_SPEED 100000
  14:main.c        **** #define MIN_SPEED 1000
  15:main.c        ****                 
  16:main.c        **** volatile double speed = 0.0;
  17:main.c        **** uint16 old = 65535;
  18:main.c        **** uint16 new;
  19:main.c        **** uint16 elapsed;
  20:main.c        **** volatile double PWM_base = 30000;
  21:main.c        **** volatile double pwm;
  22:main.c        **** double err_speed;
  23:main.c        **** double acc_err_speed = 0;
  24:main.c        **** char strbuf[42];
  25:main.c        **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 2


  26:main.c        **** // Line-following constants and variables       
  27:main.c        **** #define MIDDLE_LINE 300
  28:main.c        **** #define Kp_steering -5
  29:main.c        **** #define Ki_steering 0
  30:main.c        **** #define Kd_steering -1
  31:main.c        **** 
  32:main.c        **** double error_steering = 0;
  33:main.c        **** double steeringIntegral = 0;
  34:main.c        **** double steeringDerivative = 0;
  35:main.c        **** double previousSteeringError = 0;
  36:main.c        **** double steeringOutput = 0;
  37:main.c        **** int steeringPWM = 0;
  38:main.c        **** double sampledTime;
  39:main.c        **** 
  40:main.c        **** #define PWM_MIN 1000
  41:main.c        **** #define PWM_CENTER 1500
  42:main.c        **** #define PWM_MAX 2000
  43:main.c        **** 
  44:main.c        **** char str_buf [32];
  45:main.c        **** 
  46:main.c        **** // C Sync ISR - increments line count and signals the middle line
  47:main.c        **** CY_ISR(steer_inter) {
  33              		.loc 1 47 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  38              		.cfi_def_cfa_offset 32
  39              		.cfi_offset 4, -32
  40              		.cfi_offset 5, -28
  41              		.cfi_offset 6, -24
  42              		.cfi_offset 7, -20
  43              		.cfi_offset 8, -16
  44              		.cfi_offset 9, -12
  45              		.cfi_offset 10, -8
  46              		.cfi_offset 14, -4
  48:main.c        ****     
  49:main.c        ****     // Read the capture value from the sample timer
  50:main.c        ****     sampledTime = 65535 - (double) VID_TIMER_ReadCapture();
  47              		.loc 1 50 0
  48 0004 FFF7FEFF 		bl	VID_TIMER_ReadCapture
  49              	.LVL0:
  50 0008 FFF7FEFF 		bl	__aeabi_ui2d
  51              	.LVL1:
  52 000c 0246     		mov	r2, r0
  53 000e 0B46     		mov	r3, r1
  54 0010 31A1     		adr	r1, .L5
  55 0012 D1E90001 		ldrd	r0, [r1]
  56 0016 FFF7FEFF 		bl	__aeabi_dsub
  57              	.LVL2:
  58 001a 0246     		mov	r2, r0
  59 001c 0B46     		mov	r3, r1
  60 001e 3449     		ldr	r1, .L5+24
  61 0020 C1E90023 		strd	r2, [r1]
  51:main.c        ****     
  52:main.c        ****     // Calculate steering error
  53:main.c        ****     error_steering = MIDDLE_LINE - sampledTime;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 3


  62              		.loc 1 53 0
  63 0024 2EA1     		adr	r1, .L5+8
  64 0026 D1E90001 		ldrd	r0, [r1]
  65 002a FFF7FEFF 		bl	__aeabi_dsub
  66              	.LVL3:
  67 002e 0446     		mov	r4, r0
  68 0030 0D46     		mov	r5, r1
  69 0032 DFF8C4A0 		ldr	r10, .L5+32
  70 0036 CAE90045 		strd	r4, [r10]
  54:main.c        ****     
  55:main.c        ****     // Update integral and derivative terms
  56:main.c        ****     steeringIntegral += error_steering;
  71              		.loc 1 56 0
  72 003a DAE90223 		ldrd	r2, [r10, #8]
  73 003e FFF7FEFF 		bl	__aeabi_dadd
  74              	.LVL4:
  75 0042 8046     		mov	r8, r0
  76 0044 8946     		mov	r9, r1
  77 0046 CAE90289 		strd	r8, [r10, #8]
  57:main.c        ****     steeringDerivative = error_steering - previousSteeringError;
  78              		.loc 1 57 0
  79 004a DAE90423 		ldrd	r2, [r10, #16]
  80 004e 2046     		mov	r0, r4
  81 0050 2946     		mov	r1, r5
  82 0052 FFF7FEFF 		bl	__aeabi_dsub
  83              	.LVL5:
  84 0056 0646     		mov	r6, r0
  85 0058 0F46     		mov	r7, r1
  86 005a CAE90667 		strd	r6, [r10, #24]
  58:main.c        ****     previousSteeringError = error_steering;
  87              		.loc 1 58 0
  88 005e CAE90445 		strd	r4, [r10, #16]
  59:main.c        ****     
  60:main.c        ****     // Calculate the steering output using PID
  61:main.c        ****     steeringOutput = PWM_CENTER + (Kp_steering * error_steering) +
  89              		.loc 1 61 0
  90 0062 0022     		movs	r2, #0
  91 0064 234B     		ldr	r3, .L5+28
  92 0066 2046     		mov	r0, r4
  93 0068 2946     		mov	r1, r5
  94 006a FFF7FEFF 		bl	__aeabi_dmul
  95              	.LVL6:
  96 006e 1EA3     		adr	r3, .L5+16
  97 0070 D3E90023 		ldrd	r2, [r3]
  98 0074 FFF7FEFF 		bl	__aeabi_dadd
  99              	.LVL7:
 100 0078 0446     		mov	r4, r0
 101 007a 0D46     		mov	r5, r1
  62:main.c        ****                      (Ki_steering * steeringIntegral) + 
 102              		.loc 1 62 0
 103 007c 0022     		movs	r2, #0
 104 007e 0023     		movs	r3, #0
 105 0080 4046     		mov	r0, r8
 106 0082 4946     		mov	r1, r9
 107 0084 FFF7FEFF 		bl	__aeabi_dmul
 108              	.LVL8:
  61:main.c        ****                      (Ki_steering * steeringIntegral) + 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 4


 109              		.loc 1 61 0
 110 0088 0246     		mov	r2, r0
 111 008a 0B46     		mov	r3, r1
 112 008c 2046     		mov	r0, r4
 113 008e 2946     		mov	r1, r5
 114 0090 FFF7FEFF 		bl	__aeabi_dadd
 115              	.LVL9:
 116              		.loc 1 62 0
 117 0094 3246     		mov	r2, r6
 118 0096 3B46     		mov	r3, r7
 119 0098 FFF7FEFF 		bl	__aeabi_dsub
 120              	.LVL10:
  61:main.c        ****                      (Ki_steering * steeringIntegral) + 
 121              		.loc 1 61 0
 122 009c CAE90801 		strd	r0, [r10, #32]
  63:main.c        ****                      (Kd_steering * steeringDerivative);
  64:main.c        ****                      
  65:main.c        ****     steeringPWM = (uint16)steeringOutput; // cast to uint16
 123              		.loc 1 65 0
 124 00a0 FFF7FEFF 		bl	__aeabi_d2uiz
 125              	.LVL11:
 126 00a4 80B2     		uxth	r0, r0
 127 00a6 CAF82800 		str	r0, [r10, #40]
  66:main.c        ****     
  67:main.c        ****     // Limit steering PWM within the min and max bounds
  68:main.c        ****     if (steeringPWM < PWM_MIN) steeringPWM = PWM_MIN;
 128              		.loc 1 68 0
 129 00aa B0F57A7F 		cmp	r0, #1000
 130 00ae 03DA     		bge	.L2
 131              		.loc 1 68 0 is_stmt 0 discriminator 1
 132 00b0 4FF47A72 		mov	r2, #1000
 133 00b4 CAF82820 		str	r2, [r10, #40]
 134              	.L2:
  69:main.c        ****     if (steeringPWM > PWM_MAX) steeringPWM = PWM_MAX;
 135              		.loc 1 69 0 is_stmt 1
 136 00b8 0F4B     		ldr	r3, .L5+32
 137 00ba 9B6A     		ldr	r3, [r3, #40]
 138 00bc B3F5FA6F 		cmp	r3, #2000
 139 00c0 03DD     		ble	.L3
 140              		.loc 1 69 0 is_stmt 0 discriminator 1
 141 00c2 4FF4FA62 		mov	r2, #2000
 142 00c6 0C4B     		ldr	r3, .L5+32
 143 00c8 9A62     		str	r2, [r3, #40]
 144              	.L3:
  70:main.c        ****     
  71:main.c        ****     // Update servo PWM
  72:main.c        ****     SERVO_PWM_WriteCompare(steeringPWM);
 145              		.loc 1 72 0 is_stmt 1
 146 00ca 0B4B     		ldr	r3, .L5+32
 147 00cc 188D     		ldrh	r0, [r3, #40]
 148 00ce FFF7FEFF 		bl	SERVO_PWM_WriteCompare
 149              	.LVL12:
 150 00d2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 151              	.L6:
 152 00d6 00BF     		.align	3
 153              	.L5:
 154 00d8 00000000 		.word	0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 5


 155 00dc E0FFEF40 		.word	1089470432
 156 00e0 00000000 		.word	0
 157 00e4 00C07240 		.word	1081262080
 158 00e8 00000000 		.word	0
 159 00ec 00709740 		.word	1083666432
 160 00f0 00000000 		.word	sampledTime
 161 00f4 000014C0 		.word	-1072431104
 162 00f8 00000000 		.word	.LANCHOR0
 163              		.cfi_endproc
 164              	.LFE64:
 165              		.size	steer_inter, .-steer_inter
 166              		.global	__aeabi_ddiv
 167              		.global	__aeabi_dcmpgt
 168              		.global	__aeabi_dcmplt
 169              		.section	.text.speed_inter,"ax",%progbits
 170              		.align	2
 171              		.global	speed_inter
 172              		.thumb
 173              		.thumb_func
 174              		.type	speed_inter, %function
 175              	speed_inter:
 176              	.LFB65:
  73:main.c        ****     
  74:main.c        ****     // DEBUG
  75:main.c        ****     /*
  76:main.c        ****     UART_PutString("\r\n NAV INTR");
  77:main.c        ****     sprintf(str_buf, "\r\n time:  %f", sampledTime);
  78:main.c        ****     UART_PutString(str_buf);
  79:main.c        ****     sprintf(str_buf, "\r\n steering error:  %f", error_steering);
  80:main.c        ****     UART_PutString(str_buf);
  81:main.c        ****     sprintf(str_buf, "\r\n integral: %f", steeringIntegral);
  82:main.c        ****     UART_PutString(str_buf);
  83:main.c        ****     sprintf(str_buf, "\r\n derivative: %f", steeringDerivative);
  84:main.c        ****     UART_PutString(str_buf);
  85:main.c        ****     sprintf(str_buf, "\r\n steering pwm:  %f", steeringOutput);
  86:main.c        ****     UART_PutString(str_buf);
  87:main.c        ****     */
  88:main.c        **** 
  89:main.c        **** }
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** CY_ISR(speed_inter) {
 177              		.loc 1 92 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 182              		.cfi_def_cfa_offset 32
 183              		.cfi_offset 3, -32
 184              		.cfi_offset 4, -28
 185              		.cfi_offset 5, -24
 186              		.cfi_offset 6, -20
 187              		.cfi_offset 7, -16
 188              		.cfi_offset 8, -12
 189              		.cfi_offset 9, -8
 190              		.cfi_offset 14, -4
  93:main.c        ****     new = TIMER_ReadCapture();
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 6


 191              		.loc 1 93 0
 192 0004 FFF7FEFF 		bl	TIMER_ReadCapture
 193              	.LVL13:
 194 0008 4D4B     		ldr	r3, .L20+24
 195 000a 1880     		strh	r0, [r3]	@ movhi
  94:main.c        ****     if (new <= old)
 196              		.loc 1 94 0
 197 000c 4D4B     		ldr	r3, .L20+28
 198 000e 1B88     		ldrh	r3, [r3]
 199 0010 9842     		cmp	r0, r3
 200 0012 03D8     		bhi	.L8
  95:main.c        ****         elapsed = old - new;
 201              		.loc 1 95 0
 202 0014 1B1A     		subs	r3, r3, r0
 203 0016 4C4A     		ldr	r2, .L20+32
 204 0018 1380     		strh	r3, [r2]	@ movhi
 205 001a 03E0     		b	.L9
 206              	.L8:
  96:main.c        ****     else
  97:main.c        ****         elapsed = 65535 - new + old;
 207              		.loc 1 97 0
 208 001c 1B1A     		subs	r3, r3, r0
 209 001e 013B     		subs	r3, r3, #1
 210 0020 494A     		ldr	r2, .L20+32
 211 0022 1380     		strh	r3, [r2]	@ movhi
 212              	.L9:
  98:main.c        ****     
  99:main.c        ****     speed = 1256.0 / (double) elapsed;
 213              		.loc 1 99 0
 214 0024 484B     		ldr	r3, .L20+32
 215 0026 1888     		ldrh	r0, [r3]
 216 0028 FFF7FEFF 		bl	__aeabi_ui2d
 217              	.LVL14:
 218 002c 0246     		mov	r2, r0
 219 002e 0B46     		mov	r3, r1
 220 0030 0020     		movs	r0, #0
 221 0032 4649     		ldr	r1, .L20+36
 222 0034 FFF7FEFF 		bl	__aeabi_ddiv
 223              	.LVL15:
 224 0038 454C     		ldr	r4, .L20+40
 225 003a C4E90C01 		strd	r0, [r4, #48]
 100:main.c        ****     err_speed = TARGET_SPEED - speed;
 226              		.loc 1 100 0
 227 003e D4E90C23 		ldrd	r2, [r4, #48]
 228 0042 0020     		movs	r0, #0
 229 0044 4349     		ldr	r1, .L20+44
 230 0046 FFF7FEFF 		bl	__aeabi_dsub
 231              	.LVL16:
 232 004a 8046     		mov	r8, r0
 233 004c 8946     		mov	r9, r1
 234 004e 424B     		ldr	r3, .L20+48
 235 0050 C3E90089 		strd	r8, [r3]
 101:main.c        ****     acc_err_speed += err_speed;
 236              		.loc 1 101 0
 237 0054 D4E90E23 		ldrd	r2, [r4, #56]
 238 0058 FFF7FEFF 		bl	__aeabi_dadd
 239              	.LVL17:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 7


 240 005c 0646     		mov	r6, r0
 241 005e 0F46     		mov	r7, r1
 242 0060 C4E90E67 		strd	r6, [r4, #56]
 102:main.c        **** 
 103:main.c        ****     if (error_steering > 200)
 243              		.loc 1 103 0
 244 0064 0022     		movs	r2, #0
 245 0066 3D4B     		ldr	r3, .L20+52
 246 0068 D4E90001 		ldrd	r0, [r4]
 247 006c FFF7FEFF 		bl	__aeabi_dcmpgt
 248              	.LVL18:
 249 0070 28B1     		cbz	r0, .L10
 104:main.c        ****        PWM_base = 30000; 
 250              		.loc 1 104 0
 251 0072 2DA1     		adr	r1, .L20
 252 0074 D1E90001 		ldrd	r0, [r1]
 253 0078 324B     		ldr	r3, .L20+28
 254 007a C3E90201 		strd	r0, [r3, #8]
 255              	.L10:
 105:main.c        ****     
 106:main.c        ****     pwm = PWM_base + Kp_speed * err_speed + Ki_speed * acc_err_speed;
 256              		.loc 1 106 0
 257 007e 0022     		movs	r2, #0
 258 0080 374B     		ldr	r3, .L20+56
 259 0082 4046     		mov	r0, r8
 260 0084 4946     		mov	r1, r9
 261 0086 FFF7FEFF 		bl	__aeabi_dmul
 262              	.LVL19:
 263 008a 2E4B     		ldr	r3, .L20+28
 264 008c D3E90223 		ldrd	r2, [r3, #8]
 265 0090 FFF7FEFF 		bl	__aeabi_dadd
 266              	.LVL20:
 267 0094 0446     		mov	r4, r0
 268 0096 0D46     		mov	r5, r1
 269 0098 25A3     		adr	r3, .L20+8
 270 009a D3E90023 		ldrd	r2, [r3]
 271 009e 3046     		mov	r0, r6
 272 00a0 3946     		mov	r1, r7
 273 00a2 FFF7FEFF 		bl	__aeabi_dmul
 274              	.LVL21:
 275 00a6 0246     		mov	r2, r0
 276 00a8 0B46     		mov	r3, r1
 277 00aa 2046     		mov	r0, r4
 278 00ac 2946     		mov	r1, r5
 279 00ae FFF7FEFF 		bl	__aeabi_dadd
 280              	.LVL22:
 281 00b2 2C4C     		ldr	r4, .L20+60
 282 00b4 C4E90001 		strd	r0, [r4]
 107:main.c        ****     if (pwm < MIN_SPEED)
 283              		.loc 1 107 0
 284 00b8 0022     		movs	r2, #0
 285 00ba 2B4B     		ldr	r3, .L20+64
 286 00bc D4E90001 		ldrd	r0, [r4]
 287 00c0 FFF7FEFF 		bl	__aeabi_dcmplt
 288              	.LVL23:
 289 00c4 18B1     		cbz	r0, .L12
 108:main.c        ****         pwm = MIN_SPEED;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 8


 290              		.loc 1 108 0
 291 00c6 0020     		movs	r0, #0
 292 00c8 2749     		ldr	r1, .L20+64
 293 00ca C4E90001 		strd	r0, [r4]
 294              	.L12:
 109:main.c        ****     if (pwm > MAX_SPEED)
 295              		.loc 1 109 0
 296 00ce 1AA3     		adr	r3, .L20+16
 297 00d0 D3E90023 		ldrd	r2, [r3]
 298 00d4 2349     		ldr	r1, .L20+60
 299 00d6 D1E90001 		ldrd	r0, [r1]
 300 00da FFF7FEFF 		bl	__aeabi_dcmpgt
 301              	.LVL24:
 302 00de 28B1     		cbz	r0, .L14
 110:main.c        ****         pwm = MAX_SPEED;
 303              		.loc 1 110 0
 304 00e0 15A1     		adr	r1, .L20+16
 305 00e2 D1E90001 		ldrd	r0, [r1]
 306 00e6 1F4B     		ldr	r3, .L20+60
 307 00e8 C3E90001 		strd	r0, [r3]
 308              	.L14:
 111:main.c        ****     
 112:main.c        ****     // DEBUG
 113:main.c        ****     UART_PutString("\r\n SPEED INTR");
 309              		.loc 1 113 0
 310 00ec 1F48     		ldr	r0, .L20+68
 311 00ee FFF7FEFF 		bl	UART_PutString
 312              	.LVL25:
 114:main.c        ****     sprintf(str_buf, "%f ft/s,\r\n", speed);
 313              		.loc 1 114 0
 314 00f2 1F4C     		ldr	r4, .L20+72
 315 00f4 164B     		ldr	r3, .L20+40
 316 00f6 D3E90C23 		ldrd	r2, [r3, #48]
 317 00fa 1E49     		ldr	r1, .L20+76
 318 00fc 2046     		mov	r0, r4
 319 00fe FFF7FEFF 		bl	sprintf
 320              	.LVL26:
 115:main.c        ****     UART_PutString(str_buf);
 321              		.loc 1 115 0
 322 0102 2046     		mov	r0, r4
 323 0104 FFF7FEFF 		bl	UART_PutString
 324              	.LVL27:
 116:main.c        ****       
 117:main.c        ****     PWM_WriteCompare((uint16)pwm);
 325              		.loc 1 117 0
 326 0108 164B     		ldr	r3, .L20+60
 327 010a D3E90001 		ldrd	r0, [r3]
 328 010e FFF7FEFF 		bl	__aeabi_d2uiz
 329              	.LVL28:
 330 0112 80B2     		uxth	r0, r0
 331 0114 FFF7FEFF 		bl	PWM_WriteCompare
 332              	.LVL29:
 118:main.c        ****     TIMER_ReadStatusRegister();
 333              		.loc 1 118 0
 334 0118 FFF7FEFF 		bl	TIMER_ReadStatusRegister
 335              	.LVL30:
 119:main.c        ****     old = new;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 9


 336              		.loc 1 119 0
 337 011c 084B     		ldr	r3, .L20+24
 338 011e 1A88     		ldrh	r2, [r3]
 339 0120 084B     		ldr	r3, .L20+28
 340 0122 1A80     		strh	r2, [r3]	@ movhi
 341 0124 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 342              	.L21:
 343              		.align	3
 344              	.L20:
 345 0128 00000000 		.word	0
 346 012c 004CDD40 		.word	1088244736
 347 0130 00000000 		.word	0
 348 0134 00C06240 		.word	1080213504
 349 0138 00000000 		.word	0
 350 013c 006AF840 		.word	1090021888
 351 0140 00000000 		.word	new
 352 0144 00000000 		.word	.LANCHOR1
 353 0148 00000000 		.word	elapsed
 354 014c 00A09340 		.word	1083416576
 355 0150 00000000 		.word	.LANCHOR0
 356 0154 00001040 		.word	1074790400
 357 0158 00000000 		.word	err_speed
 358 015c 00006940 		.word	1080623104
 359 0160 00407F40 		.word	1082081280
 360 0164 00000000 		.word	pwm
 361 0168 00408F40 		.word	1083129856
 362 016c 00000000 		.word	.LC0
 363 0170 00000000 		.word	str_buf
 364 0174 10000000 		.word	.LC1
 365              		.cfi_endproc
 366              	.LFE65:
 367              		.size	speed_inter, .-speed_inter
 368              		.section	.text.main,"ax",%progbits
 369              		.align	2
 370              		.global	main
 371              		.thumb
 372              		.thumb_func
 373              		.type	main, %function
 374              	main:
 375              	.LFB66:
 120:main.c        **** }
 121:main.c        **** 
 122:main.c        **** // Main function
 123:main.c        **** int main(void) {
 376              		.loc 1 123 0
 377              		.cfi_startproc
 378              		@ Volatile: function does not return.
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 08B5     		push	{r3, lr}
 382              		.cfi_def_cfa_offset 8
 383              		.cfi_offset 3, -8
 384              		.cfi_offset 14, -4
 124:main.c        ****     CyGlobalIntEnable;
 385              		.loc 1 124 0
 386              		.syntax unified
 387              	@ 124 "main.c" 1
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 10


 388 0002 62B6     		CPSIE   i
 389              	@ 0 "" 2
 125:main.c        ****     
 126:main.c        ****     // Speed control init
 127:main.c        ****     PWM_Start();
 390              		.loc 1 127 0
 391              		.thumb
 392              		.syntax unified
 393 0004 FFF7FEFF 		bl	PWM_Start
 394              	.LVL31:
 128:main.c        ****     TIMER_Start();
 395              		.loc 1 128 0
 396 0008 FFF7FEFF 		bl	TIMER_Start
 397              	.LVL32:
 129:main.c        ****     UART_Start();
 398              		.loc 1 129 0
 399 000c FFF7FEFF 		bl	UART_Start
 400              	.LVL33:
 130:main.c        **** 
 131:main.c        ****     // Steering control init
 132:main.c        ****     VID_TIMER_Start();
 401              		.loc 1 132 0
 402 0010 FFF7FEFF 		bl	VID_TIMER_Start
 403              	.LVL34:
 133:main.c        ****     SERVO_PWM_Start();
 404              		.loc 1 133 0
 405 0014 FFF7FEFF 		bl	SERVO_PWM_Start
 406              	.LVL35:
 134:main.c        ****     VDAC_Start();
 407              		.loc 1 134 0
 408 0018 FFF7FEFF 		bl	VDAC_Start
 409              	.LVL36:
 135:main.c        ****     COMP_Start();
 410              		.loc 1 135 0
 411 001c FFF7FEFF 		bl	COMP_Start
 412              	.LVL37:
 136:main.c        ****     
 137:main.c        ****     // Interrupts
 138:main.c        ****     INT_SAMPLE_Start();
 413              		.loc 1 138 0
 414 0020 FFF7FEFF 		bl	INT_SAMPLE_Start
 415              	.LVL38:
 139:main.c        ****     INT_SAMPLE_SetVector(steer_inter);
 416              		.loc 1 139 0
 417 0024 0448     		ldr	r0, .L25
 418 0026 FFF7FEFF 		bl	INT_SAMPLE_SetVector
 419              	.LVL39:
 140:main.c        ****     
 141:main.c        ****     HE_ISR_Start();
 420              		.loc 1 141 0
 421 002a FFF7FEFF 		bl	HE_ISR_Start
 422              	.LVL40:
 142:main.c        ****     HE_ISR_SetVector(speed_inter);
 423              		.loc 1 142 0
 424 002e 0348     		ldr	r0, .L25+4
 425 0030 FFF7FEFF 		bl	HE_ISR_SetVector
 426              	.LVL41:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 11


 427              	.L23:
 428 0034 FEE7     		b	.L23
 429              	.L26:
 430 0036 00BF     		.align	2
 431              	.L25:
 432 0038 00000000 		.word	steer_inter
 433 003c 00000000 		.word	speed_inter
 434              		.cfi_endproc
 435              	.LFE66:
 436              		.size	main, .-main
 437              		.comm	str_buf,32,4
 438              		.comm	sampledTime,8,8
 439              		.global	steeringPWM
 440              		.global	steeringOutput
 441              		.global	previousSteeringError
 442              		.global	steeringDerivative
 443              		.global	steeringIntegral
 444              		.global	error_steering
 445              		.comm	strbuf,42,4
 446              		.global	acc_err_speed
 447              		.comm	err_speed,8,8
 448              		.comm	pwm,8,8
 449              		.global	PWM_base
 450              		.comm	elapsed,2,2
 451              		.comm	new,2,2
 452              		.global	old
 453              		.global	speed
 454              		.data
 455              		.align	3
 456              		.set	.LANCHOR1,. + 0
 457              		.type	old, %object
 458              		.size	old, 2
 459              	old:
 460 0000 FFFF     		.short	-1
 461 0002 00000000 		.space	6
 461      0000
 462              		.type	PWM_base, %object
 463              		.size	PWM_base, 8
 464              	PWM_base:
 465 0008 00000000 		.word	0
 466 000c 004CDD40 		.word	1088244736
 467              		.section	.rodata.str1.4,"aMS",%progbits,1
 468              		.align	2
 469              	.LC0:
 470 0000 0D0A2053 		.ascii	"\015\012 SPEED INTR\000"
 470      50454544 
 470      20494E54 
 470      5200
 471 000e 0000     		.space	2
 472              	.LC1:
 473 0010 25662066 		.ascii	"%f ft/s,\015\012\000"
 473      742F732C 
 473      0D0A00
 474              		.bss
 475              		.align	3
 476              		.set	.LANCHOR0,. + 0
 477              		.type	error_steering, %object
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 12


 478              		.size	error_steering, 8
 479              	error_steering:
 480 0000 00000000 		.space	8
 480      00000000 
 481              		.type	steeringIntegral, %object
 482              		.size	steeringIntegral, 8
 483              	steeringIntegral:
 484 0008 00000000 		.space	8
 484      00000000 
 485              		.type	previousSteeringError, %object
 486              		.size	previousSteeringError, 8
 487              	previousSteeringError:
 488 0010 00000000 		.space	8
 488      00000000 
 489              		.type	steeringDerivative, %object
 490              		.size	steeringDerivative, 8
 491              	steeringDerivative:
 492 0018 00000000 		.space	8
 492      00000000 
 493              		.type	steeringOutput, %object
 494              		.size	steeringOutput, 8
 495              	steeringOutput:
 496 0020 00000000 		.space	8
 496      00000000 
 497              		.type	steeringPWM, %object
 498              		.size	steeringPWM, 4
 499              	steeringPWM:
 500 0028 00000000 		.space	4
 501 002c 00000000 		.space	4
 502              		.type	speed, %object
 503              		.size	speed, 8
 504              	speed:
 505 0030 00000000 		.space	8
 505      00000000 
 506              		.type	acc_err_speed, %object
 507              		.size	acc_err_speed, 8
 508              	acc_err_speed:
 509 0038 00000000 		.space	8
 509      00000000 
 510              		.text
 511              	.Letext0:
 512              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 513              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 514              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 515              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 516              		.file 6 "Generated_Source\\PSoC5/VID_TIMER.h"
 517              		.file 7 "Generated_Source\\PSoC5/SERVO_PWM.h"
 518              		.file 8 "Generated_Source\\PSoC5/TIMER.h"
 519              		.file 9 "Generated_Source\\PSoC5/UART.h"
 520              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4
 521              		.file 11 "Generated_Source\\PSoC5/PWM.h"
 522              		.file 12 "Generated_Source\\PSoC5/VDAC.h"
 523              		.file 13 "Generated_Source\\PSoC5/COMP.h"
 524              		.file 14 "Generated_Source\\PSoC5/INT_SAMPLE.h"
 525              		.file 15 "Generated_Source\\PSoC5/HE_ISR.h"
 526              		.section	.debug_info,"",%progbits
 527              	.Ldebug_info0:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 13


 528 0000 00040000 		.4byte	0x400
 529 0004 0400     		.2byte	0x4
 530 0006 00000000 		.4byte	.Ldebug_abbrev0
 531 000a 04       		.byte	0x4
 532 000b 01       		.uleb128 0x1
 533 000c D0000000 		.4byte	.LASF52
 534 0010 0C       		.byte	0xc
 535 0011 E8020000 		.4byte	.LASF53
 536 0015 0C020000 		.4byte	.LASF54
 537 0019 00000000 		.4byte	.Ldebug_ranges0+0
 538 001d 00000000 		.4byte	0
 539 0021 00000000 		.4byte	.Ldebug_line0
 540 0025 02       		.uleb128 0x2
 541 0026 01       		.byte	0x1
 542 0027 06       		.byte	0x6
 543 0028 A0000000 		.4byte	.LASF0
 544 002c 02       		.uleb128 0x2
 545 002d 01       		.byte	0x1
 546 002e 08       		.byte	0x8
 547 002f C2000000 		.4byte	.LASF1
 548 0033 02       		.uleb128 0x2
 549 0034 02       		.byte	0x2
 550 0035 05       		.byte	0x5
 551 0036 02020000 		.4byte	.LASF2
 552 003a 02       		.uleb128 0x2
 553 003b 02       		.byte	0x2
 554 003c 07       		.byte	0x7
 555 003d 21000000 		.4byte	.LASF3
 556 0041 03       		.uleb128 0x3
 557 0042 09000000 		.4byte	.LASF9
 558 0046 02       		.byte	0x2
 559 0047 3F       		.byte	0x3f
 560 0048 4C000000 		.4byte	0x4c
 561 004c 02       		.uleb128 0x2
 562 004d 04       		.byte	0x4
 563 004e 05       		.byte	0x5
 564 004f 40030000 		.4byte	.LASF4
 565 0053 02       		.uleb128 0x2
 566 0054 04       		.byte	0x4
 567 0055 07       		.byte	0x7
 568 0056 C7010000 		.4byte	.LASF5
 569 005a 02       		.uleb128 0x2
 570 005b 08       		.byte	0x8
 571 005c 05       		.byte	0x5
 572 005d DA020000 		.4byte	.LASF6
 573 0061 02       		.uleb128 0x2
 574 0062 08       		.byte	0x8
 575 0063 07       		.byte	0x7
 576 0064 7A020000 		.4byte	.LASF7
 577 0068 04       		.uleb128 0x4
 578 0069 04       		.byte	0x4
 579 006a 05       		.byte	0x5
 580 006b 696E7400 		.ascii	"int\000"
 581 006f 02       		.uleb128 0x2
 582 0070 04       		.byte	0x4
 583 0071 07       		.byte	0x7
 584 0072 61020000 		.4byte	.LASF8
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 14


 585 0076 03       		.uleb128 0x3
 586 0077 68000000 		.4byte	.LASF10
 587 007b 03       		.byte	0x3
 588 007c 2C       		.byte	0x2c
 589 007d 41000000 		.4byte	0x41
 590 0081 05       		.uleb128 0x5
 591 0082 55020000 		.4byte	.LASF11
 592 0086 04       		.byte	0x4
 593 0087 EA01     		.2byte	0x1ea
 594 0089 3A000000 		.4byte	0x3a
 595 008d 02       		.uleb128 0x2
 596 008e 04       		.byte	0x4
 597 008f 04       		.byte	0x4
 598 0090 81000000 		.4byte	.LASF12
 599 0094 02       		.uleb128 0x2
 600 0095 08       		.byte	0x8
 601 0096 04       		.byte	0x4
 602 0097 61030000 		.4byte	.LASF13
 603 009b 02       		.uleb128 0x2
 604 009c 01       		.byte	0x1
 605 009d 08       		.byte	0x8
 606 009e EF020000 		.4byte	.LASF14
 607 00a2 02       		.uleb128 0x2
 608 00a3 08       		.byte	0x8
 609 00a4 04       		.byte	0x4
 610 00a5 55030000 		.4byte	.LASF15
 611 00a9 02       		.uleb128 0x2
 612 00aa 04       		.byte	0x4
 613 00ab 07       		.byte	0x7
 614 00ac C1020000 		.4byte	.LASF16
 615 00b0 06       		.uleb128 0x6
 616 00b1 4D000000 		.4byte	.LASF17
 617 00b5 01       		.byte	0x1
 618 00b6 2F       		.byte	0x2f
 619 00b7 00000000 		.4byte	.LFB64
 620 00bb FC000000 		.4byte	.LFE64-.LFB64
 621 00bf 01       		.uleb128 0x1
 622 00c0 9C       		.byte	0x9c
 623 00c1 D8000000 		.4byte	0xd8
 624 00c5 07       		.uleb128 0x7
 625 00c6 08000000 		.4byte	.LVL0
 626 00ca 3D030000 		.4byte	0x33d
 627 00ce 07       		.uleb128 0x7
 628 00cf D2000000 		.4byte	.LVL12
 629 00d3 48030000 		.4byte	0x348
 630 00d7 00       		.byte	0
 631 00d8 06       		.uleb128 0x6
 632 00d9 6E020000 		.4byte	.LASF18
 633 00dd 01       		.byte	0x1
 634 00de 5C       		.byte	0x5c
 635 00df 00000000 		.4byte	.LFB65
 636 00e3 78010000 		.4byte	.LFE65-.LFB65
 637 00e7 01       		.uleb128 0x1
 638 00e8 9C       		.byte	0x9c
 639 00e9 51010000 		.4byte	0x151
 640 00ed 07       		.uleb128 0x7
 641 00ee 08000000 		.4byte	.LVL13
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 15


 642 00f2 53030000 		.4byte	0x353
 643 00f6 08       		.uleb128 0x8
 644 00f7 F2000000 		.4byte	.LVL25
 645 00fb 5E030000 		.4byte	0x35e
 646 00ff 0D010000 		.4byte	0x10d
 647 0103 09       		.uleb128 0x9
 648 0104 01       		.uleb128 0x1
 649 0105 50       		.byte	0x50
 650 0106 05       		.uleb128 0x5
 651 0107 03       		.byte	0x3
 652 0108 00000000 		.4byte	.LC0
 653 010c 00       		.byte	0
 654 010d 08       		.uleb128 0x8
 655 010e 02010000 		.4byte	.LVL26
 656 0112 69030000 		.4byte	0x369
 657 0116 2A010000 		.4byte	0x12a
 658 011a 09       		.uleb128 0x9
 659 011b 01       		.uleb128 0x1
 660 011c 50       		.byte	0x50
 661 011d 02       		.uleb128 0x2
 662 011e 74       		.byte	0x74
 663 011f 00       		.sleb128 0
 664 0120 09       		.uleb128 0x9
 665 0121 01       		.uleb128 0x1
 666 0122 51       		.byte	0x51
 667 0123 05       		.uleb128 0x5
 668 0124 03       		.byte	0x3
 669 0125 10000000 		.4byte	.LC1
 670 0129 00       		.byte	0
 671 012a 08       		.uleb128 0x8
 672 012b 08010000 		.4byte	.LVL27
 673 012f 5E030000 		.4byte	0x35e
 674 0133 3E010000 		.4byte	0x13e
 675 0137 09       		.uleb128 0x9
 676 0138 01       		.uleb128 0x1
 677 0139 50       		.byte	0x50
 678 013a 02       		.uleb128 0x2
 679 013b 74       		.byte	0x74
 680 013c 00       		.sleb128 0
 681 013d 00       		.byte	0
 682 013e 07       		.uleb128 0x7
 683 013f 18010000 		.4byte	.LVL29
 684 0143 74030000 		.4byte	0x374
 685 0147 07       		.uleb128 0x7
 686 0148 1C010000 		.4byte	.LVL30
 687 014c 7F030000 		.4byte	0x37f
 688 0150 00       		.byte	0
 689 0151 0A       		.uleb128 0xa
 690 0152 5C020000 		.4byte	.LASF55
 691 0156 01       		.byte	0x1
 692 0157 7B       		.byte	0x7b
 693 0158 68000000 		.4byte	0x68
 694 015c 00000000 		.4byte	.LFB66
 695 0160 40000000 		.4byte	.LFE66-.LFB66
 696 0164 01       		.uleb128 0x1
 697 0165 9C       		.byte	0x9c
 698 0166 E6010000 		.4byte	0x1e6
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 16


 699 016a 07       		.uleb128 0x7
 700 016b 08000000 		.4byte	.LVL31
 701 016f 8A030000 		.4byte	0x38a
 702 0173 07       		.uleb128 0x7
 703 0174 0C000000 		.4byte	.LVL32
 704 0178 95030000 		.4byte	0x395
 705 017c 07       		.uleb128 0x7
 706 017d 10000000 		.4byte	.LVL33
 707 0181 A0030000 		.4byte	0x3a0
 708 0185 07       		.uleb128 0x7
 709 0186 14000000 		.4byte	.LVL34
 710 018a AB030000 		.4byte	0x3ab
 711 018e 07       		.uleb128 0x7
 712 018f 18000000 		.4byte	.LVL35
 713 0193 B6030000 		.4byte	0x3b6
 714 0197 07       		.uleb128 0x7
 715 0198 1C000000 		.4byte	.LVL36
 716 019c C1030000 		.4byte	0x3c1
 717 01a0 07       		.uleb128 0x7
 718 01a1 20000000 		.4byte	.LVL37
 719 01a5 CC030000 		.4byte	0x3cc
 720 01a9 07       		.uleb128 0x7
 721 01aa 24000000 		.4byte	.LVL38
 722 01ae D7030000 		.4byte	0x3d7
 723 01b2 08       		.uleb128 0x8
 724 01b3 2A000000 		.4byte	.LVL39
 725 01b7 E2030000 		.4byte	0x3e2
 726 01bb C9010000 		.4byte	0x1c9
 727 01bf 09       		.uleb128 0x9
 728 01c0 01       		.uleb128 0x1
 729 01c1 50       		.byte	0x50
 730 01c2 05       		.uleb128 0x5
 731 01c3 03       		.byte	0x3
 732 01c4 00000000 		.4byte	steer_inter
 733 01c8 00       		.byte	0
 734 01c9 07       		.uleb128 0x7
 735 01ca 2E000000 		.4byte	.LVL40
 736 01ce ED030000 		.4byte	0x3ed
 737 01d2 0B       		.uleb128 0xb
 738 01d3 34000000 		.4byte	.LVL41
 739 01d7 F8030000 		.4byte	0x3f8
 740 01db 09       		.uleb128 0x9
 741 01dc 01       		.uleb128 0x1
 742 01dd 50       		.byte	0x50
 743 01de 05       		.uleb128 0x5
 744 01df 03       		.byte	0x3
 745 01e0 00000000 		.4byte	speed_inter
 746 01e4 00       		.byte	0
 747 01e5 00       		.byte	0
 748 01e6 0C       		.uleb128 0xc
 749 01e7 BA010000 		.4byte	.LASF19
 750 01eb 05       		.byte	0x5
 751 01ec 1207     		.2byte	0x712
 752 01ee F2010000 		.4byte	0x1f2
 753 01f2 0D       		.uleb128 0xd
 754 01f3 76000000 		.4byte	0x76
 755 01f7 0E       		.uleb128 0xe
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 17


 756 01f8 BB020000 		.4byte	.LASF20
 757 01fc 01       		.byte	0x1
 758 01fd 10       		.byte	0x10
 759 01fe 08020000 		.4byte	0x208
 760 0202 05       		.uleb128 0x5
 761 0203 03       		.byte	0x3
 762 0204 00000000 		.4byte	speed
 763 0208 0D       		.uleb128 0xd
 764 0209 94000000 		.4byte	0x94
 765 020d 0F       		.uleb128 0xf
 766 020e 6F6C6400 		.ascii	"old\000"
 767 0212 01       		.byte	0x1
 768 0213 11       		.byte	0x11
 769 0214 81000000 		.4byte	0x81
 770 0218 05       		.uleb128 0x5
 771 0219 03       		.byte	0x3
 772 021a 00000000 		.4byte	old
 773 021e 0F       		.uleb128 0xf
 774 021f 6E657700 		.ascii	"new\000"
 775 0223 01       		.byte	0x1
 776 0224 12       		.byte	0x12
 777 0225 81000000 		.4byte	0x81
 778 0229 05       		.uleb128 0x5
 779 022a 03       		.byte	0x3
 780 022b 00000000 		.4byte	new
 781 022f 0E       		.uleb128 0xe
 782 0230 B3020000 		.4byte	.LASF21
 783 0234 01       		.byte	0x1
 784 0235 13       		.byte	0x13
 785 0236 81000000 		.4byte	0x81
 786 023a 05       		.uleb128 0x5
 787 023b 03       		.byte	0x3
 788 023c 00000000 		.4byte	elapsed
 789 0240 0E       		.uleb128 0xe
 790 0241 00000000 		.4byte	.LASF22
 791 0245 01       		.byte	0x1
 792 0246 14       		.byte	0x14
 793 0247 08020000 		.4byte	0x208
 794 024b 05       		.uleb128 0x5
 795 024c 03       		.byte	0x3
 796 024d 00000000 		.4byte	PWM_base
 797 0251 0F       		.uleb128 0xf
 798 0252 70776D00 		.ascii	"pwm\000"
 799 0256 01       		.byte	0x1
 800 0257 15       		.byte	0x15
 801 0258 08020000 		.4byte	0x208
 802 025c 05       		.uleb128 0x5
 803 025d 03       		.byte	0x3
 804 025e 00000000 		.4byte	pwm
 805 0262 0E       		.uleb128 0xe
 806 0263 87010000 		.4byte	.LASF23
 807 0267 01       		.byte	0x1
 808 0268 16       		.byte	0x16
 809 0269 94000000 		.4byte	0x94
 810 026d 05       		.uleb128 0x5
 811 026e 03       		.byte	0x3
 812 026f 00000000 		.4byte	err_speed
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 18


 813 0273 0E       		.uleb128 0xe
 814 0274 13000000 		.4byte	.LASF24
 815 0278 01       		.byte	0x1
 816 0279 17       		.byte	0x17
 817 027a 94000000 		.4byte	0x94
 818 027e 05       		.uleb128 0x5
 819 027f 03       		.byte	0x3
 820 0280 00000000 		.4byte	acc_err_speed
 821 0284 10       		.uleb128 0x10
 822 0285 9B000000 		.4byte	0x9b
 823 0289 94020000 		.4byte	0x294
 824 028d 11       		.uleb128 0x11
 825 028e A9000000 		.4byte	0xa9
 826 0292 29       		.byte	0x29
 827 0293 00       		.byte	0
 828 0294 0E       		.uleb128 0xe
 829 0295 FB010000 		.4byte	.LASF25
 830 0299 01       		.byte	0x1
 831 029a 18       		.byte	0x18
 832 029b 84020000 		.4byte	0x284
 833 029f 05       		.uleb128 0x5
 834 02a0 03       		.byte	0x3
 835 02a1 00000000 		.4byte	strbuf
 836 02a5 0E       		.uleb128 0xe
 837 02a6 59000000 		.4byte	.LASF26
 838 02aa 01       		.byte	0x1
 839 02ab 20       		.byte	0x20
 840 02ac 94000000 		.4byte	0x94
 841 02b0 05       		.uleb128 0x5
 842 02b1 03       		.byte	0x3
 843 02b2 00000000 		.4byte	error_steering
 844 02b6 0E       		.uleb128 0xe
 845 02b7 D9010000 		.4byte	.LASF27
 846 02bb 01       		.byte	0x1
 847 02bc 21       		.byte	0x21
 848 02bd 94000000 		.4byte	0x94
 849 02c1 05       		.uleb128 0x5
 850 02c2 03       		.byte	0x3
 851 02c3 00000000 		.4byte	steeringIntegral
 852 02c7 0E       		.uleb128 0xe
 853 02c8 A0020000 		.4byte	.LASF28
 854 02cc 01       		.byte	0x1
 855 02cd 22       		.byte	0x22
 856 02ce 94000000 		.4byte	0x94
 857 02d2 05       		.uleb128 0x5
 858 02d3 03       		.byte	0x3
 859 02d4 00000000 		.4byte	steeringDerivative
 860 02d8 0E       		.uleb128 0xe
 861 02d9 AC000000 		.4byte	.LASF29
 862 02dd 01       		.byte	0x1
 863 02de 23       		.byte	0x23
 864 02df 94000000 		.4byte	0x94
 865 02e3 05       		.uleb128 0x5
 866 02e4 03       		.byte	0x3
 867 02e5 00000000 		.4byte	previousSteeringError
 868 02e9 0E       		.uleb128 0xe
 869 02ea 91020000 		.4byte	.LASF30
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 19


 870 02ee 01       		.byte	0x1
 871 02ef 24       		.byte	0x24
 872 02f0 94000000 		.4byte	0x94
 873 02f4 05       		.uleb128 0x5
 874 02f5 03       		.byte	0x3
 875 02f6 00000000 		.4byte	steeringOutput
 876 02fa 0E       		.uleb128 0xe
 877 02fb 41000000 		.4byte	.LASF31
 878 02ff 01       		.byte	0x1
 879 0300 25       		.byte	0x25
 880 0301 68000000 		.4byte	0x68
 881 0305 05       		.uleb128 0x5
 882 0306 03       		.byte	0x3
 883 0307 00000000 		.4byte	steeringPWM
 884 030b 0E       		.uleb128 0xe
 885 030c 05030000 		.4byte	.LASF32
 886 0310 01       		.byte	0x1
 887 0311 26       		.byte	0x26
 888 0312 94000000 		.4byte	0x94
 889 0316 05       		.uleb128 0x5
 890 0317 03       		.byte	0x3
 891 0318 00000000 		.4byte	sampledTime
 892 031c 10       		.uleb128 0x10
 893 031d 9B000000 		.4byte	0x9b
 894 0321 2C030000 		.4byte	0x32c
 895 0325 11       		.uleb128 0x11
 896 0326 A9000000 		.4byte	0xa9
 897 032a 1F       		.byte	0x1f
 898 032b 00       		.byte	0
 899 032c 0E       		.uleb128 0xe
 900 032d 91010000 		.4byte	.LASF33
 901 0331 01       		.byte	0x1
 902 0332 2C       		.byte	0x2c
 903 0333 1C030000 		.4byte	0x31c
 904 0337 05       		.uleb128 0x5
 905 0338 03       		.byte	0x3
 906 0339 00000000 		.4byte	str_buf
 907 033d 12       		.uleb128 0x12
 908 033e A4010000 		.4byte	.LASF34
 909 0342 A4010000 		.4byte	.LASF34
 910 0346 06       		.byte	0x6
 911 0347 6B       		.byte	0x6b
 912 0348 12       		.uleb128 0x12
 913 0349 5E010000 		.4byte	.LASF35
 914 034d 5E010000 		.4byte	.LASF35
 915 0351 07       		.byte	0x7
 916 0352 C3       		.byte	0xc3
 917 0353 12       		.uleb128 0x12
 918 0354 75010000 		.4byte	.LASF36
 919 0358 75010000 		.4byte	.LASF36
 920 035c 08       		.byte	0x8
 921 035d 6B       		.byte	0x6b
 922 035e 12       		.uleb128 0x12
 923 035f 68030000 		.4byte	.LASF37
 924 0363 68030000 		.4byte	.LASF37
 925 0367 09       		.byte	0x9
 926 0368 8B       		.byte	0x8b
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 20


 927 0369 12       		.uleb128 0x12
 928 036a 8D030000 		.4byte	.LASF38
 929 036e 8D030000 		.4byte	.LASF38
 930 0372 0A       		.byte	0xa
 931 0373 E7       		.byte	0xe7
 932 0374 12       		.uleb128 0x12
 933 0375 EA010000 		.4byte	.LASF39
 934 0379 EA010000 		.4byte	.LASF39
 935 037d 0B       		.byte	0xb
 936 037e C3       		.byte	0xc3
 937 037f 12       		.uleb128 0x12
 938 0380 87000000 		.4byte	.LASF40
 939 0384 87000000 		.4byte	.LASF40
 940 0388 08       		.byte	0x8
 941 0389 5E       		.byte	0x5e
 942 038a 12       		.uleb128 0x12
 943 038b 26030000 		.4byte	.LASF41
 944 038f 26030000 		.4byte	.LASF41
 945 0393 0B       		.byte	0xb
 946 0394 92       		.byte	0x92
 947 0395 12       		.uleb128 0x12
 948 0396 49030000 		.4byte	.LASF42
 949 039a 49030000 		.4byte	.LASF42
 950 039e 08       		.byte	0x8
 951 039f 5A       		.byte	0x5a
 952 03a0 12       		.uleb128 0x12
 953 03a1 99010000 		.4byte	.LASF43
 954 03a5 99010000 		.4byte	.LASF43
 955 03a9 09       		.byte	0x9
 956 03aa 54       		.byte	0x54
 957 03ab 12       		.uleb128 0x12
 958 03ac CA020000 		.4byte	.LASF44
 959 03b0 CA020000 		.4byte	.LASF44
 960 03b4 06       		.byte	0x6
 961 03b5 5A       		.byte	0x5a
 962 03b6 12       		.uleb128 0x12
 963 03b7 30030000 		.4byte	.LASF45
 964 03bb 30030000 		.4byte	.LASF45
 965 03bf 07       		.byte	0x7
 966 03c0 92       		.byte	0x92
 967 03c1 12       		.uleb128 0x12
 968 03c2 77030000 		.4byte	.LASF46
 969 03c6 77030000 		.4byte	.LASF46
 970 03ca 0C       		.byte	0xc
 971 03cb 33       		.byte	0x33
 972 03cc 12       		.uleb128 0x12
 973 03cd 82030000 		.4byte	.LASF47
 974 03d1 82030000 		.4byte	.LASF47
 975 03d5 0D       		.byte	0xd
 976 03d6 3F       		.byte	0x3f
 977 03d7 12       		.uleb128 0x12
 978 03d8 70000000 		.4byte	.LASF48
 979 03dc 70000000 		.4byte	.LASF48
 980 03e0 0E       		.byte	0xe
 981 03e1 17       		.byte	0x17
 982 03e2 12       		.uleb128 0x12
 983 03e3 11030000 		.4byte	.LASF49
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 21


 984 03e7 11030000 		.4byte	.LASF49
 985 03eb 0E       		.byte	0xe
 986 03ec 1D       		.byte	0x1d
 987 03ed 12       		.uleb128 0x12
 988 03ee 34000000 		.4byte	.LASF50
 989 03f2 34000000 		.4byte	.LASF50
 990 03f6 0F       		.byte	0xf
 991 03f7 17       		.byte	0x17
 992 03f8 12       		.uleb128 0x12
 993 03f9 F4020000 		.4byte	.LASF51
 994 03fd F4020000 		.4byte	.LASF51
 995 0401 0F       		.byte	0xf
 996 0402 1D       		.byte	0x1d
 997 0403 00       		.byte	0
 998              		.section	.debug_abbrev,"",%progbits
 999              	.Ldebug_abbrev0:
 1000 0000 01       		.uleb128 0x1
 1001 0001 11       		.uleb128 0x11
 1002 0002 01       		.byte	0x1
 1003 0003 25       		.uleb128 0x25
 1004 0004 0E       		.uleb128 0xe
 1005 0005 13       		.uleb128 0x13
 1006 0006 0B       		.uleb128 0xb
 1007 0007 03       		.uleb128 0x3
 1008 0008 0E       		.uleb128 0xe
 1009 0009 1B       		.uleb128 0x1b
 1010 000a 0E       		.uleb128 0xe
 1011 000b 55       		.uleb128 0x55
 1012 000c 17       		.uleb128 0x17
 1013 000d 11       		.uleb128 0x11
 1014 000e 01       		.uleb128 0x1
 1015 000f 10       		.uleb128 0x10
 1016 0010 17       		.uleb128 0x17
 1017 0011 00       		.byte	0
 1018 0012 00       		.byte	0
 1019 0013 02       		.uleb128 0x2
 1020 0014 24       		.uleb128 0x24
 1021 0015 00       		.byte	0
 1022 0016 0B       		.uleb128 0xb
 1023 0017 0B       		.uleb128 0xb
 1024 0018 3E       		.uleb128 0x3e
 1025 0019 0B       		.uleb128 0xb
 1026 001a 03       		.uleb128 0x3
 1027 001b 0E       		.uleb128 0xe
 1028 001c 00       		.byte	0
 1029 001d 00       		.byte	0
 1030 001e 03       		.uleb128 0x3
 1031 001f 16       		.uleb128 0x16
 1032 0020 00       		.byte	0
 1033 0021 03       		.uleb128 0x3
 1034 0022 0E       		.uleb128 0xe
 1035 0023 3A       		.uleb128 0x3a
 1036 0024 0B       		.uleb128 0xb
 1037 0025 3B       		.uleb128 0x3b
 1038 0026 0B       		.uleb128 0xb
 1039 0027 49       		.uleb128 0x49
 1040 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 22


 1041 0029 00       		.byte	0
 1042 002a 00       		.byte	0
 1043 002b 04       		.uleb128 0x4
 1044 002c 24       		.uleb128 0x24
 1045 002d 00       		.byte	0
 1046 002e 0B       		.uleb128 0xb
 1047 002f 0B       		.uleb128 0xb
 1048 0030 3E       		.uleb128 0x3e
 1049 0031 0B       		.uleb128 0xb
 1050 0032 03       		.uleb128 0x3
 1051 0033 08       		.uleb128 0x8
 1052 0034 00       		.byte	0
 1053 0035 00       		.byte	0
 1054 0036 05       		.uleb128 0x5
 1055 0037 16       		.uleb128 0x16
 1056 0038 00       		.byte	0
 1057 0039 03       		.uleb128 0x3
 1058 003a 0E       		.uleb128 0xe
 1059 003b 3A       		.uleb128 0x3a
 1060 003c 0B       		.uleb128 0xb
 1061 003d 3B       		.uleb128 0x3b
 1062 003e 05       		.uleb128 0x5
 1063 003f 49       		.uleb128 0x49
 1064 0040 13       		.uleb128 0x13
 1065 0041 00       		.byte	0
 1066 0042 00       		.byte	0
 1067 0043 06       		.uleb128 0x6
 1068 0044 2E       		.uleb128 0x2e
 1069 0045 01       		.byte	0x1
 1070 0046 3F       		.uleb128 0x3f
 1071 0047 19       		.uleb128 0x19
 1072 0048 03       		.uleb128 0x3
 1073 0049 0E       		.uleb128 0xe
 1074 004a 3A       		.uleb128 0x3a
 1075 004b 0B       		.uleb128 0xb
 1076 004c 3B       		.uleb128 0x3b
 1077 004d 0B       		.uleb128 0xb
 1078 004e 27       		.uleb128 0x27
 1079 004f 19       		.uleb128 0x19
 1080 0050 11       		.uleb128 0x11
 1081 0051 01       		.uleb128 0x1
 1082 0052 12       		.uleb128 0x12
 1083 0053 06       		.uleb128 0x6
 1084 0054 40       		.uleb128 0x40
 1085 0055 18       		.uleb128 0x18
 1086 0056 9642     		.uleb128 0x2116
 1087 0058 19       		.uleb128 0x19
 1088 0059 01       		.uleb128 0x1
 1089 005a 13       		.uleb128 0x13
 1090 005b 00       		.byte	0
 1091 005c 00       		.byte	0
 1092 005d 07       		.uleb128 0x7
 1093 005e 898201   		.uleb128 0x4109
 1094 0061 00       		.byte	0
 1095 0062 11       		.uleb128 0x11
 1096 0063 01       		.uleb128 0x1
 1097 0064 31       		.uleb128 0x31
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 23


 1098 0065 13       		.uleb128 0x13
 1099 0066 00       		.byte	0
 1100 0067 00       		.byte	0
 1101 0068 08       		.uleb128 0x8
 1102 0069 898201   		.uleb128 0x4109
 1103 006c 01       		.byte	0x1
 1104 006d 11       		.uleb128 0x11
 1105 006e 01       		.uleb128 0x1
 1106 006f 31       		.uleb128 0x31
 1107 0070 13       		.uleb128 0x13
 1108 0071 01       		.uleb128 0x1
 1109 0072 13       		.uleb128 0x13
 1110 0073 00       		.byte	0
 1111 0074 00       		.byte	0
 1112 0075 09       		.uleb128 0x9
 1113 0076 8A8201   		.uleb128 0x410a
 1114 0079 00       		.byte	0
 1115 007a 02       		.uleb128 0x2
 1116 007b 18       		.uleb128 0x18
 1117 007c 9142     		.uleb128 0x2111
 1118 007e 18       		.uleb128 0x18
 1119 007f 00       		.byte	0
 1120 0080 00       		.byte	0
 1121 0081 0A       		.uleb128 0xa
 1122 0082 2E       		.uleb128 0x2e
 1123 0083 01       		.byte	0x1
 1124 0084 3F       		.uleb128 0x3f
 1125 0085 19       		.uleb128 0x19
 1126 0086 03       		.uleb128 0x3
 1127 0087 0E       		.uleb128 0xe
 1128 0088 3A       		.uleb128 0x3a
 1129 0089 0B       		.uleb128 0xb
 1130 008a 3B       		.uleb128 0x3b
 1131 008b 0B       		.uleb128 0xb
 1132 008c 27       		.uleb128 0x27
 1133 008d 19       		.uleb128 0x19
 1134 008e 49       		.uleb128 0x49
 1135 008f 13       		.uleb128 0x13
 1136 0090 8701     		.uleb128 0x87
 1137 0092 19       		.uleb128 0x19
 1138 0093 11       		.uleb128 0x11
 1139 0094 01       		.uleb128 0x1
 1140 0095 12       		.uleb128 0x12
 1141 0096 06       		.uleb128 0x6
 1142 0097 40       		.uleb128 0x40
 1143 0098 18       		.uleb128 0x18
 1144 0099 9742     		.uleb128 0x2117
 1145 009b 19       		.uleb128 0x19
 1146 009c 01       		.uleb128 0x1
 1147 009d 13       		.uleb128 0x13
 1148 009e 00       		.byte	0
 1149 009f 00       		.byte	0
 1150 00a0 0B       		.uleb128 0xb
 1151 00a1 898201   		.uleb128 0x4109
 1152 00a4 01       		.byte	0x1
 1153 00a5 11       		.uleb128 0x11
 1154 00a6 01       		.uleb128 0x1
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 24


 1155 00a7 31       		.uleb128 0x31
 1156 00a8 13       		.uleb128 0x13
 1157 00a9 00       		.byte	0
 1158 00aa 00       		.byte	0
 1159 00ab 0C       		.uleb128 0xc
 1160 00ac 34       		.uleb128 0x34
 1161 00ad 00       		.byte	0
 1162 00ae 03       		.uleb128 0x3
 1163 00af 0E       		.uleb128 0xe
 1164 00b0 3A       		.uleb128 0x3a
 1165 00b1 0B       		.uleb128 0xb
 1166 00b2 3B       		.uleb128 0x3b
 1167 00b3 05       		.uleb128 0x5
 1168 00b4 49       		.uleb128 0x49
 1169 00b5 13       		.uleb128 0x13
 1170 00b6 3F       		.uleb128 0x3f
 1171 00b7 19       		.uleb128 0x19
 1172 00b8 3C       		.uleb128 0x3c
 1173 00b9 19       		.uleb128 0x19
 1174 00ba 00       		.byte	0
 1175 00bb 00       		.byte	0
 1176 00bc 0D       		.uleb128 0xd
 1177 00bd 35       		.uleb128 0x35
 1178 00be 00       		.byte	0
 1179 00bf 49       		.uleb128 0x49
 1180 00c0 13       		.uleb128 0x13
 1181 00c1 00       		.byte	0
 1182 00c2 00       		.byte	0
 1183 00c3 0E       		.uleb128 0xe
 1184 00c4 34       		.uleb128 0x34
 1185 00c5 00       		.byte	0
 1186 00c6 03       		.uleb128 0x3
 1187 00c7 0E       		.uleb128 0xe
 1188 00c8 3A       		.uleb128 0x3a
 1189 00c9 0B       		.uleb128 0xb
 1190 00ca 3B       		.uleb128 0x3b
 1191 00cb 0B       		.uleb128 0xb
 1192 00cc 49       		.uleb128 0x49
 1193 00cd 13       		.uleb128 0x13
 1194 00ce 3F       		.uleb128 0x3f
 1195 00cf 19       		.uleb128 0x19
 1196 00d0 02       		.uleb128 0x2
 1197 00d1 18       		.uleb128 0x18
 1198 00d2 00       		.byte	0
 1199 00d3 00       		.byte	0
 1200 00d4 0F       		.uleb128 0xf
 1201 00d5 34       		.uleb128 0x34
 1202 00d6 00       		.byte	0
 1203 00d7 03       		.uleb128 0x3
 1204 00d8 08       		.uleb128 0x8
 1205 00d9 3A       		.uleb128 0x3a
 1206 00da 0B       		.uleb128 0xb
 1207 00db 3B       		.uleb128 0x3b
 1208 00dc 0B       		.uleb128 0xb
 1209 00dd 49       		.uleb128 0x49
 1210 00de 13       		.uleb128 0x13
 1211 00df 3F       		.uleb128 0x3f
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 25


 1212 00e0 19       		.uleb128 0x19
 1213 00e1 02       		.uleb128 0x2
 1214 00e2 18       		.uleb128 0x18
 1215 00e3 00       		.byte	0
 1216 00e4 00       		.byte	0
 1217 00e5 10       		.uleb128 0x10
 1218 00e6 01       		.uleb128 0x1
 1219 00e7 01       		.byte	0x1
 1220 00e8 49       		.uleb128 0x49
 1221 00e9 13       		.uleb128 0x13
 1222 00ea 01       		.uleb128 0x1
 1223 00eb 13       		.uleb128 0x13
 1224 00ec 00       		.byte	0
 1225 00ed 00       		.byte	0
 1226 00ee 11       		.uleb128 0x11
 1227 00ef 21       		.uleb128 0x21
 1228 00f0 00       		.byte	0
 1229 00f1 49       		.uleb128 0x49
 1230 00f2 13       		.uleb128 0x13
 1231 00f3 2F       		.uleb128 0x2f
 1232 00f4 0B       		.uleb128 0xb
 1233 00f5 00       		.byte	0
 1234 00f6 00       		.byte	0
 1235 00f7 12       		.uleb128 0x12
 1236 00f8 2E       		.uleb128 0x2e
 1237 00f9 00       		.byte	0
 1238 00fa 3F       		.uleb128 0x3f
 1239 00fb 19       		.uleb128 0x19
 1240 00fc 3C       		.uleb128 0x3c
 1241 00fd 19       		.uleb128 0x19
 1242 00fe 6E       		.uleb128 0x6e
 1243 00ff 0E       		.uleb128 0xe
 1244 0100 03       		.uleb128 0x3
 1245 0101 0E       		.uleb128 0xe
 1246 0102 3A       		.uleb128 0x3a
 1247 0103 0B       		.uleb128 0xb
 1248 0104 3B       		.uleb128 0x3b
 1249 0105 0B       		.uleb128 0xb
 1250 0106 00       		.byte	0
 1251 0107 00       		.byte	0
 1252 0108 00       		.byte	0
 1253              		.section	.debug_aranges,"",%progbits
 1254 0000 2C000000 		.4byte	0x2c
 1255 0004 0200     		.2byte	0x2
 1256 0006 00000000 		.4byte	.Ldebug_info0
 1257 000a 04       		.byte	0x4
 1258 000b 00       		.byte	0
 1259 000c 0000     		.2byte	0
 1260 000e 0000     		.2byte	0
 1261 0010 00000000 		.4byte	.LFB64
 1262 0014 FC000000 		.4byte	.LFE64-.LFB64
 1263 0018 00000000 		.4byte	.LFB65
 1264 001c 78010000 		.4byte	.LFE65-.LFB65
 1265 0020 00000000 		.4byte	.LFB66
 1266 0024 40000000 		.4byte	.LFE66-.LFB66
 1267 0028 00000000 		.4byte	0
 1268 002c 00000000 		.4byte	0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 26


 1269              		.section	.debug_ranges,"",%progbits
 1270              	.Ldebug_ranges0:
 1271 0000 00000000 		.4byte	.LFB64
 1272 0004 FC000000 		.4byte	.LFE64
 1273 0008 00000000 		.4byte	.LFB65
 1274 000c 78010000 		.4byte	.LFE65
 1275 0010 00000000 		.4byte	.LFB66
 1276 0014 40000000 		.4byte	.LFE66
 1277 0018 00000000 		.4byte	0
 1278 001c 00000000 		.4byte	0
 1279              		.section	.debug_line,"",%progbits
 1280              	.Ldebug_line0:
 1281 0000 9D020000 		.section	.debug_str,"MS",%progbits,1
 1281      02002B02 
 1281      00000201 
 1281      FB0E0D00 
 1281      01010101 
 1282              	.LASF22:
 1283 0000 50574D5F 		.ascii	"PWM_base\000"
 1283      62617365 
 1283      00
 1284              	.LASF9:
 1285 0009 5F5F696E 		.ascii	"__int32_t\000"
 1285      7433325F 
 1285      7400
 1286              	.LASF24:
 1287 0013 6163635F 		.ascii	"acc_err_speed\000"
 1287      6572725F 
 1287      73706565 
 1287      6400
 1288              	.LASF3:
 1289 0021 73686F72 		.ascii	"short unsigned int\000"
 1289      7420756E 
 1289      7369676E 
 1289      65642069 
 1289      6E7400
 1290              	.LASF50:
 1291 0034 48455F49 		.ascii	"HE_ISR_Start\000"
 1291      53525F53 
 1291      74617274 
 1291      00
 1292              	.LASF31:
 1293 0041 73746565 		.ascii	"steeringPWM\000"
 1293      72696E67 
 1293      50574D00 
 1294              	.LASF17:
 1295 004d 73746565 		.ascii	"steer_inter\000"
 1295      725F696E 
 1295      74657200 
 1296              	.LASF26:
 1297 0059 6572726F 		.ascii	"error_steering\000"
 1297      725F7374 
 1297      65657269 
 1297      6E6700
 1298              	.LASF10:
 1299 0068 696E7433 		.ascii	"int32_t\000"
 1299      325F7400 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 27


 1300              	.LASF48:
 1301 0070 494E545F 		.ascii	"INT_SAMPLE_Start\000"
 1301      53414D50 
 1301      4C455F53 
 1301      74617274 
 1301      00
 1302              	.LASF12:
 1303 0081 666C6F61 		.ascii	"float\000"
 1303      7400
 1304              	.LASF40:
 1305 0087 54494D45 		.ascii	"TIMER_ReadStatusRegister\000"
 1305      525F5265 
 1305      61645374 
 1305      61747573 
 1305      52656769 
 1306              	.LASF0:
 1307 00a0 7369676E 		.ascii	"signed char\000"
 1307      65642063 
 1307      68617200 
 1308              	.LASF29:
 1309 00ac 70726576 		.ascii	"previousSteeringError\000"
 1309      696F7573 
 1309      53746565 
 1309      72696E67 
 1309      4572726F 
 1310              	.LASF1:
 1311 00c2 756E7369 		.ascii	"unsigned char\000"
 1311      676E6564 
 1311      20636861 
 1311      7200
 1312              	.LASF52:
 1313 00d0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1313      43313120 
 1313      352E342E 
 1313      31203230 
 1313      31363036 
 1314 0103 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1314      20726576 
 1314      6973696F 
 1314      6E203233 
 1314      37373135 
 1315 0136 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1315      66756E63 
 1315      74696F6E 
 1315      2D736563 
 1315      74696F6E 
 1316              	.LASF35:
 1317 015e 53455256 		.ascii	"SERVO_PWM_WriteCompare\000"
 1317      4F5F5057 
 1317      4D5F5772 
 1317      69746543 
 1317      6F6D7061 
 1318              	.LASF36:
 1319 0175 54494D45 		.ascii	"TIMER_ReadCapture\000"
 1319      525F5265 
 1319      61644361 
 1319      70747572 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 28


 1319      6500
 1320              	.LASF23:
 1321 0187 6572725F 		.ascii	"err_speed\000"
 1321      73706565 
 1321      6400
 1322              	.LASF33:
 1323 0191 7374725F 		.ascii	"str_buf\000"
 1323      62756600 
 1324              	.LASF43:
 1325 0199 55415254 		.ascii	"UART_Start\000"
 1325      5F537461 
 1325      727400
 1326              	.LASF34:
 1327 01a4 5649445F 		.ascii	"VID_TIMER_ReadCapture\000"
 1327      54494D45 
 1327      525F5265 
 1327      61644361 
 1327      70747572 
 1328              	.LASF19:
 1329 01ba 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1329      52784275 
 1329      66666572 
 1329      00
 1330              	.LASF5:
 1331 01c7 6C6F6E67 		.ascii	"long unsigned int\000"
 1331      20756E73 
 1331      69676E65 
 1331      6420696E 
 1331      7400
 1332              	.LASF27:
 1333 01d9 73746565 		.ascii	"steeringIntegral\000"
 1333      72696E67 
 1333      496E7465 
 1333      6772616C 
 1333      00
 1334              	.LASF39:
 1335 01ea 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1335      57726974 
 1335      65436F6D 
 1335      70617265 
 1335      00
 1336              	.LASF25:
 1337 01fb 73747262 		.ascii	"strbuf\000"
 1337      756600
 1338              	.LASF2:
 1339 0202 73686F72 		.ascii	"short int\000"
 1339      7420696E 
 1339      7400
 1340              	.LASF54:
 1341 020c 433A5C55 		.ascii	"C:\\Users\\danie\\Documents\\ECE302_NavCode\\ECE302"
 1341      73657273 
 1341      5C64616E 
 1341      69655C44 
 1341      6F63756D 
 1342 023a 5F4E6176 		.ascii	"_NavProject\\Design01.cydsn\000"
 1342      50726F6A 
 1342      6563745C 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 29


 1342      44657369 
 1342      676E3031 
 1343              	.LASF11:
 1344 0255 75696E74 		.ascii	"uint16\000"
 1344      313600
 1345              	.LASF55:
 1346 025c 6D61696E 		.ascii	"main\000"
 1346      00
 1347              	.LASF8:
 1348 0261 756E7369 		.ascii	"unsigned int\000"
 1348      676E6564 
 1348      20696E74 
 1348      00
 1349              	.LASF18:
 1350 026e 73706565 		.ascii	"speed_inter\000"
 1350      645F696E 
 1350      74657200 
 1351              	.LASF7:
 1352 027a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1352      206C6F6E 
 1352      6720756E 
 1352      7369676E 
 1352      65642069 
 1353              	.LASF30:
 1354 0291 73746565 		.ascii	"steeringOutput\000"
 1354      72696E67 
 1354      4F757470 
 1354      757400
 1355              	.LASF28:
 1356 02a0 73746565 		.ascii	"steeringDerivative\000"
 1356      72696E67 
 1356      44657269 
 1356      76617469 
 1356      766500
 1357              	.LASF21:
 1358 02b3 656C6170 		.ascii	"elapsed\000"
 1358      73656400 
 1359              	.LASF20:
 1360 02bb 73706565 		.ascii	"speed\000"
 1360      6400
 1361              	.LASF16:
 1362 02c1 73697A65 		.ascii	"sizetype\000"
 1362      74797065 
 1362      00
 1363              	.LASF44:
 1364 02ca 5649445F 		.ascii	"VID_TIMER_Start\000"
 1364      54494D45 
 1364      525F5374 
 1364      61727400 
 1365              	.LASF6:
 1366 02da 6C6F6E67 		.ascii	"long long int\000"
 1366      206C6F6E 
 1366      6720696E 
 1366      7400
 1367              	.LASF53:
 1368 02e8 6D61696E 		.ascii	"main.c\000"
 1368      2E6300
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 30


 1369              	.LASF14:
 1370 02ef 63686172 		.ascii	"char\000"
 1370      00
 1371              	.LASF51:
 1372 02f4 48455F49 		.ascii	"HE_ISR_SetVector\000"
 1372      53525F53 
 1372      65745665 
 1372      63746F72 
 1372      00
 1373              	.LASF32:
 1374 0305 73616D70 		.ascii	"sampledTime\000"
 1374      6C656454 
 1374      696D6500 
 1375              	.LASF49:
 1376 0311 494E545F 		.ascii	"INT_SAMPLE_SetVector\000"
 1376      53414D50 
 1376      4C455F53 
 1376      65745665 
 1376      63746F72 
 1377              	.LASF41:
 1378 0326 50574D5F 		.ascii	"PWM_Start\000"
 1378      53746172 
 1378      7400
 1379              	.LASF45:
 1380 0330 53455256 		.ascii	"SERVO_PWM_Start\000"
 1380      4F5F5057 
 1380      4D5F5374 
 1380      61727400 
 1381              	.LASF4:
 1382 0340 6C6F6E67 		.ascii	"long int\000"
 1382      20696E74 
 1382      00
 1383              	.LASF42:
 1384 0349 54494D45 		.ascii	"TIMER_Start\000"
 1384      525F5374 
 1384      61727400 
 1385              	.LASF15:
 1386 0355 6C6F6E67 		.ascii	"long double\000"
 1386      20646F75 
 1386      626C6500 
 1387              	.LASF13:
 1388 0361 646F7562 		.ascii	"double\000"
 1388      6C6500
 1389              	.LASF37:
 1390 0368 55415254 		.ascii	"UART_PutString\000"
 1390      5F507574 
 1390      53747269 
 1390      6E6700
 1391              	.LASF46:
 1392 0377 56444143 		.ascii	"VDAC_Start\000"
 1392      5F537461 
 1392      727400
 1393              	.LASF47:
 1394 0382 434F4D50 		.ascii	"COMP_Start\000"
 1394      5F537461 
 1394      727400
 1395              	.LASF38:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccRMXpPg.s 			page 31


 1396 038d 73707269 		.ascii	"sprintf\000"
 1396      6E746600 
 1397              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
